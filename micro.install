<?php
// $Id: micro.install, v 1.0 2010/12/01 04:20:00 blup Exp $

/**
 * @file
 * Install, update and uninstall functions for the micro module.
 */

/**
 * Implement hook_install().
 */
function micro_install() {
}

/**
 * Implement hook_schema().
 */
function micro_schema() {
  $schema['micro'] = array(
    'description' => 'Stores micro items.',
    'fields' => array(
      'mid' => array('type' => 'serial', 'unsigned' => TRUE, 'not null' => TRUE, 'description' => 'Primary Key: Micro item ID'),
      'mtid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'The micro type id of this item.'),
      'uid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'The uid of the item\'s author'),
      'eid' => array('type' => 'int', 'unsigned' => TRUE, 'not null' => TRUE, 'default' => 0, 'description' => 'The entity ID to which the post is attached to'),
      'created' => array('type' => 'int', 'not null' => TRUE, 'default' => 0, 'description' => 'Creation date'),
    ),
    'indexes' => array('eid' => array('eid')),
    'foreign keys' => array('eid' => array('users' => 'uid'), 'mtid' => array('micro_types' => 'mtid')),
    'primary key' => array('mid'),
  );

  $schema['micro_type'] = array(
    'description' => 'Stores information about all defined micro types.',
    'fields' => array(
      'mtid' => array('type' => 'serial', 'not null' => TRUE, 'description' => 'Primary Key: Unique micro type ID'),
      'machine_name' => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'description' => 'The machine-readable name of this micro type'),
      'name' => array('type' => 'varchar', 'length' => 255, 'not null' => TRUE, 'default' => '', 'description' => 'The human-readable name of this micro type'),
      'entity' => array('type' => 'varchar', 'length' => 32, 'not null' => TRUE, 'default' => 'node', 'description' => 'The entity type to which this micro type is attached to'),
      'bundles' => array('type' => 'text', 'size' => 'big', 'not null' => FALSE, 'serialize' => TRUE, 'description' => 'The bundle type(s) to which this micro type is attached to'),
      'base' => array('description' => 'The base string used to construct callbacks corresponding to this micro type.', 'type' => 'varchar', 'length' => 255, 'not null' => TRUE),
      'module' => array('description' => 'The module defining this micro type.', 'type' => 'varchar', 'length' => 255, 'not null' => TRUE),
      'description' => array('description' => 'A brief description of this type.', 'type' => 'text', 'not null' => TRUE, 'size' => 'medium', 'translatable' => TRUE),
      'disabled' => array('description' => 'A boolean indicating whether the node type is disabled.', 'type' => 'int', 'not null' => TRUE, 'default' => 0, 'size' => 'tiny'),
      'weight' => array('type' => 'int', 'size' => 'tiny', 'not null' => TRUE, 'default' => 0, 'description' => 'The weight of this micro type in relation to others.'),
      'data' => array('type' => 'text', 'size' => 'big', 'not null' => FALSE, 'serialize' => TRUE, 'description' => 'A serialized array of additional data related to this micro type', 'merge' => TRUE, ),
    ),
    'primary key' => array('mtid'),
    'unique keys' => array('machine_name' => array('machine_name')),
  );
  return $schema;
}
